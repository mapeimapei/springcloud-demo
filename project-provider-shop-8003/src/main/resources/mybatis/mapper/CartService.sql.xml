<?xml  version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapei.www.dao.CartServiceDao">

    <sql id="whereCart">
        WHERE userid = #{userid} AND productid = #{productid}
    </sql>

    <!-- 添加购物车-->
    <insert id="addCart" parameterType="com.mapei.www.entity.Cart">
        insert INTO cart (userid,productid,quantity) VALUES (#{userid},#{productid},#{quantity})
    </insert>

    <!-- 更新购物车-->
    <update id="updateCart" parameterType="com.mapei.www.entity.Cart">
        update cart
        set quantity = cast(quantity as signed) + #{quantity}
        <include refid="whereCart"></include>
    </update>

    <!-- 查询购物车是否存在当前商品-->
    <select id="selectCart" parameterType="com.mapei.www.entity.Cart" resultType="Integer">
        select COUNT(*) from cart
        <include refid="whereCart"></include>
    </select>


<!--    <resultMap id="CartuserResultMap" type="map" autoMapping="true">-->
<!--        <id column="id" property="id"/>-->
<!--        <association property="user" javaType="com.zpc.mybatis.pojo.User" autoMapping="true">-->
<!--            <id column="user_id" property="id"/>-->
<!--        </association>-->
<!--        <collection property="detailList" javaType="List" ofType="com.zpc.mybatis.pojo.OrderDetail" autoMapping="true">-->
<!--            <id column="id" property="id"/>-->
<!--        </collection>-->
<!--    </resultMap>-->


    <!-- 根据userid 获取用户购物车数据-->
    <select id="getCartList" resultType="map">
        SELECT
            c.productid,
            c.quantity,
            p.category,
            p.image,
            p.descn,
            p.listprice,
            p.cname
        FROM cart c,products p
        WHERE c.productid = p.productid AND c.userid = #{userid}
    </select>

    <!--删除购物车-->
    <delete id="deleteCart">
        delete from cart
        WHERE
            userid=#{arg0} AND
            productid in
            <foreach collection="arg1"  open="(" close=")" separator=","  item="item">
                #{item}
            </foreach>
    </delete>

</mapper>
